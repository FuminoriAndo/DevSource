<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Color x:Key="NoChromeColor3">#FF728490</Color>

    <SolidColorBrush x:Key="BackgroundColor1" Color="#FFF5F5F5" />
    <SolidColorBrush x:Key="BackgroundColor2" Color="#4C40AAEF" />

    <SolidColorBrush x:Key="ControlBackgroundColor1" Color="#FF40AAEF" />
    <SolidColorBrush x:Key="ControlForegroundColor1" Color="#FF000000" />

    <SolidColorBrush x:Key="AccentColor1" Color="#FFFF2800" />
    <SolidColorBrush x:Key="AccentColor2" Color="#FFFFFFFF" />

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundColor1}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlBackgroundColor1}" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundColor1}" />
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>

                        <Border
                            x:Name="NormalBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" Opacity="0.3" CornerRadius="0" />

                        <Border
                            x:Name="HoverBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" Opacity="0" CornerRadius="0" />

                        <Border
                            x:Name="PressedBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0" Opacity="0" CornerRadius="0" />

                        <ContentPresenter
                            x:Name="contentPresenter" Margin="4" VerticalAlignment="Center"
                            ContentTemplate="{TemplateBinding ContentTemplate}">
                            <ContentPresenter.Content>
                                <TextBlock
                                    Margin="0,0,1,0"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextWrapping="Wrap" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalBackground" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="PressedBackground" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" />

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource BackgroundColor2}" />
        <!--        <Setter Property="FontSize" Value="12" /> -->

        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColor1}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="1">
                        <!--
                        <Border.Background>
                            <LinearGradientBrush EndPoint="1.204,0.5" StartPoint="0.056,0.5">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#FFD4D7DB" Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        -->

                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="12"
                        RadiusY="12" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity"
                                To="0.73" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientOver" Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity"
                                To="0.84" />
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity"
                                To="0.55" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity"
                                To="0" />
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0" SnapsToDevicePixels="true">
                        <Grid Margin="2,0,2,0">
                            <Rectangle
                                x:Name="BackgroundGradientOver"
                                Fill="{DynamicResource ControlBackgroundColor1}"
                                Stroke="{DynamicResource ControlBackgroundColor1}"
                                Opacity="0" RadiusX="0" RadiusY="0" />
                            <Rectangle
                                x:Name="BackgroundGradientSelectedDisabled"
                                Fill="{DynamicResource ControlBackgroundColor1}"
                                Stroke="{DynamicResource ControlBackgroundColor1}"
                                Opacity="0" RadiusX="0" RadiusY="0" />
                            <Rectangle
                                x:Name="BackgroundGradientSelected"
                                Fill="{DynamicResource ControlBackgroundColor1}"
                                Stroke="{DynamicResource ControlBackgroundColor1}"
                                StrokeThickness="1" Opacity="0" RadiusX="0"
                                RadiusY="0" />
                            <!--
                            <Rectangle x:Name="BackgroundGradientOver" RadiusX="1" RadiusY="1" Stroke="{DynamicResource MouseOverBorderBrush}" Opacity="0" Fill="{DynamicResource MouseOverBrush}"/>
                            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource ListItemSelectedBrush}" Stroke="{DynamicResource ListItemSelectedBorderBrush}"/>
                            <Rectangle x:Name="BackgroundGradientSelected" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource PressedBorderBrush}"/>
                            -->
                            <GridViewRowPresenter
                                Margin="0,2,0,2" VerticalAlignment="Stretch"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColor1}" />
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF">
                        <Rectangle Width="0.5" HorizontalAlignment="Center">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <!--
        <Setter Property="Foreground" Value="#FF042271" />
        -->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity"
                                To="1" />
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity"
                                To="0.65" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity"
                                To="0" />
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity"
                                To="0.84" />
                            <DoubleAnimation
                                Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity"
                                To="0.65" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity"
                                To="0.3" />
                            <DoubleAnimation
                                Duration="00:00:00.4000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity"
                                To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0">
                        <Grid>
                            <Border
                                x:Name="BackgroundNorm"
                                Background="{DynamicResource ControlBackgroundColor2}"
                                BorderBrush="{DynamicResource ControlForegroundColor1}"
                                BorderThickness="0.3" CornerRadius="0" />
                            <Border
                                x:Name="BackgroundNorm_highlight" Margin="0"
                                BorderBrush="{DynamicResource ControlBackgroundColor2}"
                                BorderThickness="0.5" Opacity="0.3" CornerRadius="0" />

                            <Border
                                x:Name="BackgroundOver"
                                Background="{DynamicResource ControlBackgroundColor1}"
                                BorderBrush="{DynamicResource ControlBackgroundColor1}"
                                BorderThickness="0.3" Opacity="0" CornerRadius="0" />
                            <Border
                                x:Name="BackgroundOver_Highlight" Margin="0"
                                BorderBrush="{DynamicResource ControlBackgroundColor1}"
                                BorderThickness="1" Opacity="0" CornerRadius="0" />

                            <Border
                                x:Name="BackgroundPressed"
                                Background="{DynamicResource ControlBackgroundColor1}"
                                BorderBrush="{DynamicResource ControlBackgroundColor1}"
                                BorderThickness="0.3" Opacity="0.3" CornerRadius="0" />
                            <Border
                                x:Name="BackgoundPressed_Highlight" Margin="0"
                                BorderBrush="{DynamicResource ControlBackgroundColor1}"
                                BorderThickness="11" Opacity="0" CornerRadius="0" />

                            <!--
                            <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="1.75" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
                            <Border x:Name="BackgroundNorm_highlight" Margin="1" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0.65" />

                            <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="1.75" Opacity="0" Background="{DynamicResource MouseOverBrush}" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                            <Border x:Name="BackgroundOver_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0" BorderBrush="{DynamicResource MouseOverHighlightBrush}"/>

                            <Border x:Name="BackgroundPressed" BorderThickness="1" CornerRadius="1.75" Opacity="0" Background="{DynamicResource PressedBrush}" BorderBrush="{DynamicResource PressedBorderBrush}"/>
                            <Border x:Name="BackgoundPressed_Highlight" Margin="1" BorderThickness="1,0,1,1" CornerRadius="1" Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
                            -->
                            <ContentPresenter
                                Margin="2,2,2,2"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                        </Grid>
                        <Canvas>
                            <Thumb
                                x:Name="PART_HeaderGripper" HorizontalAlignment="Stretch"
                                Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundColor1}" />
        <Setter Property="Content" Value="CheckBox" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="4,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid
                            x:Name="grid" Width="16" Height="16"
                            HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.508*" />
                                <RowDefinition Height="0.492*" />
                            </Grid.RowDefinitions>

                            <Border
                                x:Name="InnerBorder" Grid.RowSpan="2" Margin="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness=".75" Opacity="0.3" Visibility="Visible" />

                            <Border
                                x:Name="Highlight" Grid.RowSpan="2" Margin="1"
                                Background="{TemplateBinding Background}"
                                Opacity="0" />

                            <Grid
                                x:Name="Bullet" Grid.RowSpan="2" Margin="-0.25,-0.25,0,0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.8"
                                RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                <Path
                                    Margin="1,-1,-1,0" VerticalAlignment="Stretch"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="M1.6045539,4.9657478 L3.9166667,6.7270508 L8.7999792,0.13644244 L10.335848,1.2280303 L4.1581869,9.0391064 L0.39386681,6.6038928 z" Stretch="Fill" StrokeLineJoin="Miter"
                                    StrokeMiterLimit="10" />
                            </Grid>

                            <Rectangle
                                x:Name="IndeterminateRectangle" Grid.RowSpan="2" Height="3"
                                Margin="4,0,4,0"
                                Fill="{StaticResource ControlForegroundColor1}"
                                Stroke="{x:Null}"
                                StrokeThickness="0" RadiusX="1" RadiusY="1"
                                Visibility="Collapsed" />
                        </Grid>

                        <ContentPresenter
                            x:Name="contentPresenter" Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Bullet" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Bullet" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Bullet" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="grid"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="Bullet" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="IndeterminateRectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Duration="00:00:00.001" Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF000000" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabControl  -->
    <Style TargetType="{x:Type TabControl}">
        <!--<Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />-->
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel" Margin="2,2,2,-1" Panel.ZIndex="1"
                            IsItemsHost="true" KeyboardNavigation.TabIndex="1" />

                        <Border
                            x:Name="ContentPanel" Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource ControlBackgroundColor1}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0,0,3,3" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <Grid Margin="3,3,3,3">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost" Margin="1,1,1,1" ContentSource="SelectedContent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,-1,2,2" />
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="3,3,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,-1,2" />
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="0,3,3,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="-1,2,2,2" />
                            <Setter TargetName="ContentPanel" Property="CornerRadius" Value="3,0,0,3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabItem  -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundColor1}" />
        <Setter Property="Padding" Value="6,1" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBackgroundColor1}" />
        <Setter Property="Background" Value="{StaticResource ControlBackgroundColor1}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.5*" />
                            <RowDefinition Height="0.5*" />
                        </Grid.RowDefinitions>

                        <Border
                            x:Name="border" Grid.RowSpan="2"
                            Background="{StaticResource BackgroundColor1}"
                            BorderBrush="{StaticResource BackgroundColor1}"
                            BorderThickness="1" CornerRadius="0" />

                        <Border
                            x:Name="border1" Grid.RowSpan="2"
                            Background="{StaticResource BackgroundColor2}"
                            BorderBrush="Red" BorderThickness="0" CornerRadius="0" />

                        <!--
                        <Border Grid.RowSpan="2" Background="{StaticResource BackgroundColor2}" BorderBrush="{StaticResource BackgroundColor2}"
                                BorderThickness="1" CornerRadius="0" Margin="1" x:Name="border2" />
                        -->

                        <!--
                        <Border Grid.RowSpan="2" CornerRadius="0" Margin="2" x:Name="border3" Background="{StaticResource BackgroundColor2}"/>
                        -->

                        <Border
                            x:Name="BdSelected" Grid.RowSpan="2"
                            Background="{StaticResource ControlBackgroundColor1}"
                            BorderBrush="{StaticResource ControlBackgroundColor1}"
                            BorderThickness="1" CornerRadius="0" Visibility="Collapsed" />

                        <Border
                            x:Name="borderSelected" Grid.RowSpan="2"
                            BorderBrush="{StaticResource ControlBackgroundColor1}"
                            BorderThickness="1" CornerRadius="0" Visibility="Collapsed" />

                        <Border
                            x:Name="SelectedBG" Grid.RowSpan="2" Margin="1,1,1,0"
                            BorderBrush="{StaticResource ControlBackgroundColor1}"
                            BorderThickness="1,1,1,0" CornerRadius="0" Visibility="Collapsed" />

                        <Border
                            x:Name="Selected" Grid.RowSpan="2" Margin="2,2,2,0"
                            CornerRadius="0" Visibility="Collapsed" />

                        <ContentPresenter
                            x:Name="Content" Grid.RowSpan="2"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header" RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Border
                            x:Name="Disabled" Grid.RowSpan="2" Background="Red"
                            BorderBrush="{x:Null}"
                            CornerRadius="0" Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border1" Property="Opacity" Value="1" />
                            <!--
                            <Setter Property="Opacity" TargetName="border4" Value="1" />
                            -->
                            <Setter TargetName="border1" Property="Background" Value="{StaticResource ControlBackgroundColor1}" />

                            <!--<Setter Property="Background" TargetName="border3" Value="{StaticResource BackgroundColor2}"/>-->

                            <!--
                            <Setter Property="Background" TargetName="border3">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.535" ScaleY="2.412" />
                                                <TranslateTransform X="-0.015" Y="0.463" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00FFFFFF" Offset="0.549" />
                                        <GradientStop Color="#49000000" Offset="1" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            -->

                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="border1" Property="Visibility" Value="Collapsed" />
                            <!--
                            <Setter Property="Visibility" TargetName="border2" Value="Collapsed" />-->
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Collapsed" />-->
                            <!--  <Setter Property="Visibility" TargetName="border4" Value="Collapsed" />  -->
                            <Setter TargetName="BdSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="border" Property="CornerRadius" Value="0,0,3,3" />
                            <Setter TargetName="border1" Property="CornerRadius" Value="0,0,3,3" />
                            <!--<Setter Property="CornerRadius" TargetName="border2" Value="0,0,2,2" />-->
                            <!--<Setter Property="CornerRadius" TargetName="border3" Value="0,0,2,2" />-->
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="0,0,3,3" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="0,0,3,3" />
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="0,0,3,3" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="border" Property="CornerRadius" Value="3,0,0,3" />
                            <Setter TargetName="border1" Property="CornerRadius" Value="3,0,0,3" />
                            <!--<Setter Property="CornerRadius" TargetName="border2" Value="2,0,0,2" />-->
                            <!--<Setter Property="CornerRadius" TargetName="border3" Value="2,0,0,2" />-->
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="3,0,0,3" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="3,0,0,3" />
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="3,0,0,3" />
                        </Trigger>

                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="border1" Property="CornerRadius" Value="0" />
                            <!--<Setter Property="CornerRadius" TargetName="border2" Value="0" />-->
                            <!--<Setter Property="CornerRadius" TargetName="border3" Value="0" />-->
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="0" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="border1" Property="Visibility" Value="Hidden" />
                            <!--<Setter Property="Visibility" TargetName="border2" Value="Hidden" />-->
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Hidden" />-->
                            <!--
                            <Setter Property="Visibility" TargetName="border4" Value="Hidden" />
                            -->
                            <Setter TargetName="BdSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="6,1,6,1" />
                            <Setter TargetName="BdSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="border1" Property="Visibility" Value="Collapsed" />
                            <!--<Setter Property="Visibility" TargetName="border2" Value="Collapsed" />-->
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Collapsed" />-->
                            <!--
                            <Setter Property="Visibility" TargetName="border4" Value="Collapsed" />
                            -->
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="borderSelected" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="CornerRadius" Value="0,0,2,2" />
                            <Setter TargetName="SelectedBG" Property="Margin" Value="1,0,1,1" />
                            <Setter TargetName="SelectedBG" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="Selected" Property="Margin" Value="2,0,2,2" />
                            <Setter TargetName="Selected" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.498,1.393" EndPoint="0.498,0.393">
                                        <GradientStop Offset="0" Color="Red" />
                                        <GradientStop Offset="1" Color="Red" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <!--
                            <Setter Property="OpacityMask" TargetName="Selected" Value="Red"/>
                            -->
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="0,0,3,3" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="6,1,6,1" />
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="border1" Property="Visibility" Value="Collapsed" />
                            <!--<Setter Property="Visibility" TargetName="border2" Value="Collapsed" />-->
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Collapsed" />-->
                            <!--
                            <Setter Property="Visibility" TargetName="border4" Value="Collapsed" />
                            -->
                            <Setter TargetName="BdSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="borderSelected" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="SelectedBG" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="CornerRadius" Value="0" />
                            <Setter TargetName="SelectedBG" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="SelectedBG" Property="Margin" Value="1,1,0,1" />
                            <Setter TargetName="Selected" Property="Margin" Value="2,2,0,2" />
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                            <!--
                            <Setter Property="OpacityMask" TargetName="Selected">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.626,0.5" StartPoint="0.374,0.5">
                                        <GradientStop Color="#4C000000" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            -->
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2" />
                            <Setter TargetName="Content" Property="Margin" Value="6,1,6,1" />
                            <Setter TargetName="border" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="border1" Property="Visibility" Value="Hidden" />
                            <!--<Setter Property="Visibility" TargetName="border2" Value="Hidden" />-->
                            <!--<Setter Property="Visibility" TargetName="border3" Value="Hidden" />-->
                            <!--
                            <Setter Property="Visibility" TargetName="border4" Value="Hidden" />
                            -->
                            <Setter TargetName="BdSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BdSelected" Property="CornerRadius" Value="0,3,3,0" />
                            <Setter TargetName="BdSelected" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="borderSelected" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="borderSelected" Property="CornerRadius" Value="0" />
                            <Setter TargetName="SelectedBG" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SelectedBG" Property="CornerRadius" Value="0" />
                            <Setter TargetName="SelectedBG" Property="Margin" Value="0,1,1,1" />
                            <Setter TargetName="SelectedBG" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="Selected" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="Selected" Property="Visibility" Value="Visible" />
                            <!--
                            <Setter Property="OpacityMask" TargetName="Selected">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.374,0.5" StartPoint="0.626,0.5">
                                        <GradientStop Color="#4C000000" Offset="0" />
                                        <GradientStop Color="#00FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            -->
                            <Setter TargetName="Disabled" Property="CornerRadius" Value="0" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Disabled" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
